# THIS IS NOT A SCRIPT.
# THE FOLLOWING COMMANDS ARE INTENDED TO BE COPIED-AND-PASTED INTO TERMINAL WHEN NEEDED.
# BUT, THIS *IS NOT NEEDED ANYMORE* SINCE "update-mac-drives.sh" CAN BE USED INSTEAD.

# Command to FORMAT & PARTITION fgMIB + macOS Installers + Mac Test Boot:
# NOTE: For some reason (at least as of macOS 12.6.1 Monterey) each desired size need 0.13G added to it to result in the correct desired size. The sizes (plus 0.13G) being used for each installer are specified in the "Create macOS USB Installer Commands.txt" based on testing to find the minimum required size for each macOS version installer.

read '?Enter Disk IDs to Format and Partition for fgMIB + macOS Installers + Mac Test Boot: ' disk_ids && for this_disk_id in $(printf '%s\n' "${(s: :)disk_ids}" | sort -un); do diskutil partitionDisk "disk${this_disk_id}" 8 GPT JHFS+ 'fgMIB' 2.13G JHFS+ 'Install macOS Catalina' 8.53G JHFS+ 'Install macOS Big Sur' 13.73G JHFS+ 'Install macOS Monterey' 14.83G JHFS+ 'Install macOS Ventura' 14.63G JHFS+ 'Install macOS Sonoma' 16.03G JHFS+ 'Install macOS Sequoia' 18.03G JHFS+ 'Mac Test Boot' 0B || break; done




# NO LONGER USED COMMANDS


# Command to CREATE Mac Test Boot DISK IMAGE from SOURCE Drive
# THIS *IS NOT NEEDED ANYMORE* SINCE "create-mtb-dmg.sh" CAN BE USED INSTEAD

cd "${HOME}/Documents/Programming/Free Geek/MacLand Images/" && read "?'Mac Test Boot' Device Name (Probably $(diskutil list | awk '/Mac Test Boot/ { print $NF; exit }')): " device_name && date '+%Y%m%d' > '/Volumes/Mac Test Boot/private/var/root/.mtbVersion' && diskutil unmountDisk "${device_name}" || diskutil unmountDisk force "${device_name}"; sudo hdiutil create "FreeGeek-MacTestBoot-Mojave-$(date +%Y%m%d).dmg" -srcdevice "${device_name}" && sudo asr imagescan --source "FreeGeek-MacTestBoot-Mojave-$(date +%Y%m%d).dmg"


# Command to Restore Mac Test Boot

# VOLUMES ARE SUFFIXED WITH RANDOM NUMBER FOR LATER IDENTIFICATION
# SO MULTIPLE DRIVES CAN GET STARTED AND RUN AT ONCE WITHOUT CONFLICTING
# BUT, THIS *IS NOT NEEDED ANYMORE* SINCE "update-mac-drives.sh" CAN BE USED INSTEAD

MTB_IMAGE_DATE=20220412; MTB_SOURCE_IMAGE=FreeGeek-MacTestBoot-HighSierra-$MTB_IMAGE_DATE.dmg; RANDOM_SUFFIX=$RANDOM; diskutil rename MTB MTB-$RANDOM_SUFFIX; cd "$HOME/Documents/Programming/Free Geek/MacLand Images/" && echo "RESTORING '$MTB_SOURCE_IMAGE' TO 'MTB-$RANDOM_SUFFIX'" && sudo asr restore --source $MTB_SOURCE_IMAGE --target /Volumes/MTB-$RANDOM_SUFFIX --erase --noprompt


# Command to Restore Mac Test Boot with High Sierra, Catalina, and Big Sur Installers
# BUT, THIS *IS NOT NEEDED ANYMORE* SINCE "update-mac-drives.sh" CAN BE USED INSTEAD

MTB_IMAGE_DATE=20210712; MTB_SOURCE_IMAGE=FreeGeek-MacTestBoot-HighSierra-$MTB_IMAGE_DATE.dmg; RANDOM_SUFFIX=$RANDOM; diskutil rename MTB MTB-$RANDOM_SUFFIX; diskutil rename InstallHighSierra InstallHighSierra-$RANDOM_SUFFIX; diskutil rename InstallCatalina InstallCatalina-$RANDOM_SUFFIX; diskutil rename InstallBigSur InstallBigSur-$RANDOM_SUFFIX; cd "$HOME/Documents/Programming/Free Geek/MacLand Images/" && echo "RESTORING '$MTB_SOURCE_IMAGE' TO 'MTB-$RANDOM_SUFFIX'" && sudo asr restore --source $MTB_SOURCE_IMAGE --target /Volumes/MTB-$RANDOM_SUFFIX --erase --noprompt; echo "CREATING HIGH SIERRA INSTALLER ON 'InstallHighSierra-$RANDOM_SUFFIX'" && sudo '/Volumes/Install macOS High Sierra/Install macOS High Sierra.app/Contents/Resources/createinstallmedia' --volume /Volumes/InstallHighSierra-$RANDOM_SUFFIX --nointeraction; echo "CREATING CATALINA INSTALLER ON 'InstallCatalina-$RANDOM_SUFFIX'" && sudo '/Volumes/Install macOS Catalina/Install macOS Catalina.app/Contents/Resources/createinstallmedia' --volume /Volumes/InstallCatalina-$RANDOM_SUFFIX --nointeraction; echo "CREATING BIG SUR INSTALLER ON 'InstallBigSur-$RANDOM_SUFFIX'" && sudo '/Volumes/Install macOS Big Sur/Install macOS Big Sur.app/Contents/Resources/createinstallmedia' --volume /Volumes/InstallBigSur-$RANDOM_SUFFIX --nointeraction


# Command to Create Production OS Images

cd "$HOME/Documents/Programming/Free Geek/MacLand Images/Restore Images/" && read "?'High Sierra HD' Device Name (Probably $(diskutil list | grep "High Sierra HD" | head -1 | awk '{ print $NF }' | rev | cut -c 3- | rev)): " DEVICE_NAME && diskutil unmountDisk $DEVICE_NAME || diskutil unmountDisk force $DEVICE_NAME; sudo hdiutil create "HighSierra-ProductionRestore-$(date +%Y%m%d).dmg" -srcdevice $DEVICE_NAME && sudo asr imagescan --source "HighSierra-ProductionRestore-$(date +%Y%m%d).dmg"

cd "$HOME/Documents/Programming/Free Geek/MacLand Images/Restore Images/" && read "?'Catalina HD' Device Name (Probably $(diskutil info $(diskutil list | grep "Catalina HD" | head -1 | awk '{ print $NF }') | grep "APFS Physical Store" | awk '{ print $NF }' | rev | cut -c 3- | rev)): " DEVICE_NAME && diskutil unmountDisk $DEVICE_NAME || diskutil unmountDisk force $DEVICE_NAME; sudo hdiutil create "Catalina-ProductionRestore-$(date +%Y%m%d).dmg" -srcdevice $DEVICE_NAME && sudo asr imagescan --source "Catalina-ProductionRestore-$(date +%Y%m%d).dmg"


# Commands to Create Catalina Restore Boot

cd "$HOME/Documents/Programming/Free Geek/MacLand Images/" && read "?'Catalina Restore Boot' Device Name (Probably $(diskutil list | grep "Catalina Restore Boot" | head -1 | awk '{ print $NF }' | rev | cut -c 3- | rev)): " DEVICE_NAME && diskutil unmountDisk $DEVICE_NAME || diskutil unmountDisk force $DEVICE_NAME; sudo hdiutil create "FreeGeek-CatalinaRestoreBoot-Catalina-$(date +%Y%m%d).dmg" -srcdevice $DEVICE_NAME && sudo asr imagescan --source "FreeGeek-CatalinaRestoreBoot-Catalina-$(date +%Y%m%d).dmg"


# Commands to Restore Mac Test Boot and Catalina Restore Boot

# DO THESE RESTORES IN SERIES FOR EACH DRIVE BECAUSE CATALINA
# WILL OFTEN TIMEOUT IF DONE IN PARALLEL ON THE SAME DRIVE

# VOLUMES ARE SUFFIXED WITH RANDOM NUMBER FOR LATER IDENTIFICATION
# SO MULTIPLE DRIVES CAN GET STARTED AND RUN AT ONCE WITHOUT CONFLICTING

MTB_IMAGE_DATE=20210215; CRB_IMAGE_DATE=20210215; MTB_SOURCE_IMAGE=FreeGeek-MacTestBoot-HighSierra-$MTB_IMAGE_DATE.dmg; CRB_SOURCE_IMAGE=FreeGeek-CatalinaRestoreBoot-Catalina-$CRB_IMAGE_DATE.dmg; RANDOM_SUFFIX=$RANDOM; diskutil rename MTB MTB-$RANDOM_SUFFIX; diskutil rename CRB CRB-$RANDOM_SUFFIX; cd "$HOME/Documents/Programming/Free Geek/MacLand Images/Previous Test Boot Archive/" && echo "RESTORING '$MTB_SOURCE_IMAGE' TO 'MTB-$RANDOM_SUFFIX'" && sudo asr restore --source $MTB_SOURCE_IMAGE --target /Volumes/MTB-$RANDOM_SUFFIX --erase --noprompt; echo "RESTORING '$CRB_SOURCE_IMAGE' TO 'CRB-$RANDOM_SUFFIX'" && sudo asr restore --source "Legacy Mac Test Boot/$CRB_SOURCE_IMAGE" --target /Volumes/CRB-$RANDOM_SUFFIX --erase --noprompt


# LEGACY MAC TEST BOOT RESTORE:

LMTB_IMAGE_DATE=121019; LMTB_SOURCE_IMAGE=FreeGeek-MacTestBoot-ElCapitan-$LMTB_IMAGE_DATE.dmg; RANDOM_SUFFIX=$RANDOM; diskutil rename LMTB LMTB-$RANDOM_SUFFIX && cd "$HOME/Documents/Programming/Free Geek/MacLand Images/Previous Test Boot Archive/Legacy Mac Test Boot" && echo "RESTORING '$LMTB_SOURCE_IMAGE' TO 'LMTB-$RANDOM_SUFFIX'"; sudo asr restore --source $LMTB_SOURCE_IMAGE --target /Volumes/LMTB-$RANDOM_SUFFIX --erase --noprompt


# LEGACY APFS RESTORE BOOT RESTORE:

ARB_IMAGE_DATE=121019; ARB_SOURCE_IMAGE=FreeGeek-APFSRestoreBoot-HighSierra-$ARB_IMAGE_DATE.dmg; RANDOM_SUFFIX=$RANDOM; diskutil rename ARB ARB-$RANDOM_SUFFIX && cd "$HOME/Documents/Programming/Free Geek/MacLand Images/Previous Test Boot Archive/Legacy Mac Test Boot" && echo "RESTORING '$ARB_SOURCE_IMAGE' TO 'ARB-$RANDOM_SUFFIX'"; sudo asr restore --source $ARB_SOURCE_IMAGE --target /Volumes/ARB-$RANDOM_SUFFIX --erase --noprompt
